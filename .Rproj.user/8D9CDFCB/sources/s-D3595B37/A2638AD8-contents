---
title: "Untitled"
author: '22'
date: "2019/9/4"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#8.1.3 return與input
函數程序並不一定要有return與input

```{r}
nowAnnounce <- function(){
  currentDateTime <- Sys.time()
  hh<-hour(currentDateTime)
  mm<-minute(currentDateTime)
  cat("現在是",hh,"點",mm,"分")
}
```

```{r}
nowAnnounce()
```

#8.1.4 多個output值

R的函數只能輸出一個物件值，所以若有多個物件值要輸出，可以先併成一個list物件輸出。


```{r}
gpa_fun <- function(studentID){
  transcriptDataFinal$學號==studentID -> logiChosenStudent
  
  subSample <- transcriptDataFinal[logiChosenStudent,]
  
  sum(subSample$學期成績*subSample$學分數)/
    sum(subSample$學分數) -> GPA
  return(GPA)
}
```

```{r}
gpa_fun2 <- function(studentID){
  transcriptDataFinal$學號==studentID -> logiChosenStudent
  
  subSample <- transcriptDataFinal[logiChosenStudent,]
  
  sum(subSample$學期成績*subSample$學分數)/
    sum(subSample$學分數) -> GPA
  return(
    list(
      平均成績=GPA,
      成績單=subSample
      )
  )
}
```

return的value會是個list, 它包含兩個元素：平均成績（內容為GPA）、成績單（內容為subSample）
```{r}
gpa_fun2("92aS67fee") -> outputValue
outputValue$平均成績
outputValue$成績單
```

#8.2 依條件執行
if(邏輯條件){
  成立時執行
}

```{r}
a<-0
b<-1
supply_fun <- function(P,a,b){
  Qs <- a+b*P
  return(Qs)
}
supply_fun(P=-1,0,1)
```

```{r}
supply_fun2 <- function(P,a,b){
  Qs <- a+b*P
  if(P>=0) {
    return(Qs)
  }
}
supply_fun2(P=-1,0,1)
supply_fun2(P=2,0,1)
```

if(邏輯條件){
  成立時執行
} else {
  不成立時執行
}

```{r}
supply_fun3 <- function(P,a,b){
  Qs <- a+b*P
  if(P < 0) {
    message("P不能為負值") # 在螢幕出現的「錯誤」提示，沒有輸出任何值
  } else {
    return(Qs)
  }
}
supply_fun3(P=-1,0,1)
supply_fun3(P=2,0,1)
```

if(條件A) {
  條件A成立執行
} else if(條件B) {
  上個條件不成立，條件B成立時執行
} else {
  若以上情境都不成立時執行
}

```{r}
a <- readline(prompt = "請輸入一個數字： ")
if(a==1) {
  print("你輸入了1")
} else if(a==2) {
  print("你輸入了2")
} else if(a==3) {
  print("你輸入了3")
} else {
  print("你輸入了其他數字")
}
```





## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
