---
title: "CH.5"
author: "王聖博 "
date: "2019/8/17"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#前面小複習
```{r}
x3 <- c("小明","小花")
y3 <- c("小明","小華")
```

```{r}
x3 == y3
x3 != y3
```

```{r}
x3 == y3
!(x3 == y3 ) #透過!operator , 和x3 != y3 意思依樣
```



## 5-3線上練習題
##Qustion : 請問這裡有幾種匯率？“日圓JPY/USD”匯率有多少筆資料（即有多少元素值是“日圓JPY/USD”）？

```{r}
library(readr)
exData2 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData2.csv")
currency <- exData2$幣別
```

```{r}
head(currency) #head會顯示物件前六個元素值
```

資料一進來並沒有病當成factor class
```{r}
class(currency)
```

更正為factor class
```{r}
currency <- as.factor(currency)  #舊物件轉為新物件
class(currency)
```

```{r}
levels(currency)
```

Length(): 數向量內的元素個數(向量長度))
```{r}
length(levels(currency))
```

```{r}
step1_extractLevelsVector <- levels(currency)
step1_extractLevelsVector
```

```{r}
step2_countVectorLength <- length(step1_extractLevelsVector)
```

```{r}
step2_countVectorLength
```

```{r}
head(currency)
levels(currency)
```

```{r}
currency2 <- c("日元","美元","日元")
currency2
```

```{r}
sum(currency2 == "日元")
```

```{r}
head(currency)
sum(currency == "日圓JPY/USD")
```





##5.4 Logical

```{r}
x5 <- c("台北市","新北市","高雄市")
greatTaipei <- c("台北市","新北市")

x5 %in% greatTaipei
!(x5 %in% greatTaipei)
```

```{r}
y5 <- c("女","男","女")

y5
y5=="女"
!(y5=="女")
```

> 圈圈是要圈出"Relational Operation:為真的元素在物件內的「位置」
 
```{r}
x5 %in% greatTaipei
y5=="女"

(x5 %in% greatTaipei) & (y5=="女") #同時(&) 同時成立為true
```


```{r}
x5 %in% greatTaipei
y5=="女"

(x5 %in% greatTaipei) | (y5=="女") #或(|) 其中一個成立就為true
```

```{r}
x5 %in% greatTaipei
y5=="女"

xor(x5 %in% greatTaipei, y5=="女") #either or 滿足其中之一為true
```

想知道向量中第幾筆元素資料為TRUE, 此時可用which()
```{r}
y5
(y5 == "女")
which(y5=="女")
which((x5 %in% greatTaipei) & (y5=="女"))
```



##總和練習
```{r}
library(readr)
exData2 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData2.csv")
date <- as.character(exData2$期間)
currency <- exData2$幣別
exchangeRate <- exData2$匯率
```

```{r}
head(date)
```

```{r}
library(lubridate)
date <- ymd(date)
```

```{r}
class(date)
```

.............1980-08-01之後的資料有多少筆.................

```{r}
isAfter19800801 <-
  date >= ymd("1980-08-01")
isAfter19800801
```

```{r}
head(as.integer(date))
as.integer(ymd("1980-08-01"))
head(date >= ymd("1980-08-01"))
```

```{r}
class(isAfter19800801)
```

```{r}
sum(isAfter19800801)
```

...........幣別為“歐元USD/EUR”的資料有多少筆.............

```{r}
head(currency)
```

```{r}
head(currency == "歐元USD/EUR")

isEURO <- currency == "歐元USD/EUR"
```

```{r}
sum(isEURO)
```

有將current轉成factor class (答案不會變)
```{r}
currency <- as.factor(currency)
```

```{r}
isEURO <- currency == "歐元USD/EUR"
sum(isEURO)
```

-------------exchangeRate有多少筆NA-----------------
```{r}
isExchangeRateNA <-
  is.na(exchangeRate)
sum(isExchangeRateNA)
```

------------排除NA後，幣別為“歐元USD/EUR”的資料有多少筆---------
是&(同時)的概念，非NA 且 幣別為歐元

```{r}
isNotNA <- !is.na(exchangeRate)
isEuro <- currency == "歐元USD/EUR"
```

```{r}
satisfyBoth <- isNotNA & isEuro
sum(satisfyBoth)
```

另一種先不存成isNotNA,isEuro的寫法
```{r}
satifyBoth <- !is.na(exchangeRate) & currency == "歐元USD/EUR"
sum(satifyBoth)
```













## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
