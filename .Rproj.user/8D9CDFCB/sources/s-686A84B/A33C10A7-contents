---
title: "期中考"
author: '22'
date: "2019/8/27"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
```

1 字串與數字的比較
```{r}
x <- as.character(round(runif(10)*100),10)
x
```

```{r}
as.integer(x)
logicBig <- as.integer(x) > 50
logicBig
```

2 list
```{r}
compoundject <- list(1,"hello",TRUE)
compoundject
```


4 map
```{r}
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
  成績=randomGrades,
  學分數=randomCredits
)
```

```{r}
data3
```

```{r}
logiPass <- (data3$成績 >= 60)
logiPass

passData <- list(
  成績= data3$成績[logiPass],
  學分數= data3$學分數[logiPass]
)
passData
```


5
```{r}
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
#### twDates
```

```{r}
twDates
```

5-1去除字元
```{r}
str_replace(twDates,"民國","") -> x1
x1
str_replace(x1,"月","") -> twDate2
twDate2
```

另一作法
```{r}
str_replace_all(twDates,"(民國)|(月)","") -> x2
x2
```


5.2 取出年份
```{r}
twDates
str_sub(twDates,3,5) -> yearCharacter
yearCharacter

```

```{r}
as.integer(yearCharacter)+1911 -> westYears
westYears
```


5.3 西元年月日

```{r}
twDate2
str_split(twDate2,"年") -> datesSplitList ### 用年切開 年 月
datesSplitList

map(datesSplitList,~.[[2]]) -> monthList ### 取出每個元素第二位
monthList

unlist(monthList) -> monthVector ### 將list疊成字串向量
monthVector

str_c(as.character(westYears),monthVector,"01",sep = "-"
                   ) -> westDates
### 貼成YYYY-MM-DD字串格式
westDates

ymd(westDates) -> westDates ### 轉成dates
westDates
class(westDates)
```


7 成績單 sampledTranscriptData
```{r}
load("sampledTranscriptData.Rda")
names(sampledTranscriptData) <- 
  c('學號','學期成績','學分數','學年','學期','必選修類別（必／選／通）','系級','科目名稱','年級','學屆')
```

7.1 子樣本與當人比例
```{r}
(sampledTranscriptData$科目名稱 == "科目204") -> chosenSubjectLogi
length(chosenSubjectLogi)

sampledTranscriptData$學期成績[chosenSubjectLogi] -> chosenGrades
length(chosenGrades)

sum(chosenGrades<60)/length(chosenGrades) -> failRate
failRate
```

7.2 產生學屆系碼 str_sub
```{r}
sampledTranscriptData$學屆 <- 
  str_sub(sampledTranscriptData$學號,2,4)
sampledTranscriptData$系碼 <- 
  str_sub(sampledTranscriptData$學號,5,6)
head(sampledTranscriptData$學號)
head(sampledTranscriptData$系碼)
#sampledTranscriptData
```

7.3 產生學系 str_replace_all
```{r}
sampledTranscriptData$學系 <- str_replace(sampledTranscriptData$系級,"1","")
sampledTranscriptData$學系 <- str_replace(sampledTranscriptData$學系,"2","")
sampledTranscriptData$學系 <- str_replace(sampledTranscriptData$學系,"3","")
sampledTranscriptData$學系 <- str_replace(sampledTranscriptData$學系,"4","")

head(sampledTranscriptData$系級)
head(sampledTranscriptData$學系)
```


另一作法
```{r}
sampledTranscriptData$學系 <- str_replace(sampledTranscriptData$系級,"[1234]","")
head(sampledTranscriptData$學系)
```

7.4 轉系生

```{r}
(sampledTranscriptData$系碼!="73" & 
   sampledTranscriptData$學系=="經濟學系") -> logiCheck
unique(sampledTranscriptData$學號[logiCheck]) -> changeMajorStudent

changeMajorStudent
```

7.5 學期平均成績

```{r}
(sampledTranscriptData$學號 == "410073409b" &
  sampledTranscriptData$學年==101 &
  sampledTranscriptData$學期==1) -> logiSelect
  
sum(sampledTranscriptData$學分數[logiSelect]*
  sampledTranscriptData$學期成績[logiSelect])/sum(sampledTranscriptData$學分數[logiSelect]) -> studentGPA

studentGPA
```




## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
