your_practice_reponame <- "107-2-inclass-practice"
library(httr)
library(stringr)
str_replace_all(
"https://api.github.com/repos/:owner/:repo/commits",
c(
":owner"=your_github_username,
":repo"=your_practice_reponame
)
) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
commitCheckStatement
View(commitCheck)
View(commitCheck)
commitCheck(commitCheck[[4]][["commit"]][["committer"]][["date"]])
commitCheck[[4]][["commit"]][["committer"]][["date"]]
commitCheck[[4]]$[["commit"]][["committer"]][["date"]]
commitCheck[[4]]$commit[["committer"]][["date"]]
commitCheck[[4]]$commit[["committer"]][["date"]] -> commitDate
ymd_hms(commitDate) -> commitDate
library(hms)
ymd_hms(commitDate) -> commitDate
detach("package:hms", unload = TRUE)
ymd_hms(commitDate) -> commitDate
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
filmVotingData$Timestamp
filmVotingData[["Timestamp"]]
filmVotingData$`Timestamp`
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$favoritemovies,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
library(stringr)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
logiCorrect <- str_length(birthday) == 8
logiCorrect <- str_length(birthday) == 8
logiCorrect
favoriteTwo(logiCorrect)
favoriteTwo[logiCorrect]
favoriteTwo[logiCorrect] -> vaildFavoriteTwo
vaildFavoriteTwo
favoriteTwo
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
library(stringr)
str_split(favoriteTwo,", ") -> favoriteTwoList # 將選擇的兩片split成兩個元素
unlist(favoriteTwoList) -> allVotes # 將list堆疊成atomic vector
table(allVotes) # 計算每個類別的次數
logiCorrect <- str_length(birthday) == 8
logiCorrect
favoriteTwo[logiCorrect] -> vaildFavoriteTwo
vaildFavoriteTwo
knitr::opts_chunk$set(echo = TRUE)
library(lubridate); library(stringr)
major <- c("經濟系","法律系","社會系","經濟系")
grade <- c(50,60,92,88)
fromEcon <- major == "經濟系"
fromEcon <- major == "經濟系"
fromEcon
sumEcon <- sum(fromEcon)
sumEcon
meanEcon <- sum(grade*fromEcon) / sum(fromEcon)
meanEcon
library(readr)
podcastcompetition3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
submitTime <- podcastcompetition3$Timestamp
head(submitTime)
submitTime <- mdy_hms(submitTime)
submitTime
submitTime <- mdy_hms(submitTime)
head(submitTime)
submitTime <- mdy_hms(submitTime)
submitTime
submitTime <- mdy_hms(submitTime)
submitTime
library(readr)
podcastcompetition3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
submitTime <- podcastcompetition3$Timestamp
head(submitTime)
submitTime <- mdy_hms(submitTime)
submitTime
twTime<-with_tz(submitTime, tzone = "Asia/Taipei")
twTime
knitr::opts_chunk$set(echo = TRUE)
Vec1 <- c(1:6)
Vecl
Vec1 <- c(1:6)
Vecl
Vec1 <- c(1:6)
Vec1 <- c(1:6)
Vec1
Mat1 <- matrix(
c(1:6), 2,3
)
Mat1
typeof(Mat1)
class(Mat1)
Mat1
Mat1[[2]]
Mat1
Mat1[[2]]
Mat1[[6]]
Mat2 <- matrix(
c("a","b","c","d"), 2, 2
)
Mat2
Mat2[[3]]
Mat2[[3]]
Mat2[1]
Mat2[[3]]
Mat2[1,4]
Mat2[[3]]
Mat2[1:4]
Mat2[[3]]
Mat2[1][4]
Mat2[[3]]
Mat2[1,4]
class(Mat2)
typeof(Mat2)
Mat2[[2]]
class(Mat2)
typeof(Mat2)
Mat2[[2]]
Mat2[c(T,F,F,T)]
StuList <- list(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuList
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
score=c(80,60,90,70,50)
)
StuList
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuList
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
StuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
StuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
class(stuDF)
StuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
class(stuDF)
StuDF <- data.frame(
studentID1=c(172,214,322,425,517),
names1=c("小明","大雄","胖虎","小新","大白"),
grade1=c(80,60,90,70,50)
)
StuDF
class(stuDF)
StuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
class(stuDF)
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuList
StuDF <- data.frame(
aa=c(172,214,322,425,517),
bb=c("小明","大雄","胖虎","小新","大白"),
cc=c(80,60,90,70,50)
)
StuDF
stuDF
StuDF <- data.frame(
aa=c(172,214,322,425,517),
bb=c("小明","大雄","胖虎","小新","大白"),
cc=c(80,60,90,70,50)
)
StuDF
class(StuDF$姓名)
StuDF$姓名 <- as.character(StuDF$姓名)
StuDF <- data.frame(
aa=c(172,214,322,425,517),
bb=c("小明","大雄","胖虎","小新","大白"),
cc=c(80,60,90,70,50)
)
StuDF
class(stuDF)
typeof(StuDF)
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
Vec1 <- c(1:6)
Vec1
Mat1 <- matrix(
c(1:6), 2,3
)
Mat1
class(Mat1)
typeof(Mat1)
Mat1
Mat1[[2]]    #取出方式 先往下再往右
Mat1[[6]]     #左上-左下-中上-中下-右上-右下
Mat2 <- matrix(
c("a","b","c","d"), 2, 2
)
Mat2
class(Mat2)
typeof(Mat2)
Mat2[[2]]
Mat2[c(T,F,F,T)]
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuList
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
StuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
class(stuDF)
StuDF
StuDF
StuDF
StuDF
StuDF[names][3]
StuDF
StuDF[[names][[3]]
plot(pressure)
summary(cars)
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuList
G <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuDF
G <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
G
G <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
G
G <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
G
G <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
G
G
class(StuDF$姓名)
StuDF$姓名 <- as.character(StuDF$姓名)
stuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
stuDF
class(StuDF$姓名)
StuDF$姓名 <- as.character(StuDF$姓名)
class(stuDF)
typeof(StuDF)
class(StuDF$姓名)
StuDF$姓名 <- as.character(StuDF$姓名)
stuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
stuDF
class(StuDF$names)
StuDF$姓名 <- as.character(StuDF$姓名)
class(StuDF$names)
StuDF$names <- as.character(StuDF$names)
class(StuDF$names)
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
StuDF2 <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
class(StuList)
as.data.frame(StuList) -> StuDF3
class(StuDF3)
StuDF3
as.data.frame(StuList,stringsAsFactors = F) -> StuDF4
class(StuDF4)
StuDF4
class(stuDF)
typeof(StuDF)
class(names)
class(stuDF)
typeof(StuDF)
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
knitr::opts_chunk$set(echo = TRUE)
Vec1 <- c(1:6)
Vec1
Mat1 <- matrix(
c(1:6), 2,3
)
Mat1
class(Mat1)
typeof(Mat1)
Mat1
Mat1[[2]]    #取出方式 先往下再往右
Mat1[[6]]     #左上-左下-中上-中下-右上-右下
Mat2 <- matrix(
c("a","b","c","d"), 2, 2
)
Mat2
class(Mat2)
typeof(Mat2)
Mat2[[2]]
Mat2[c(T,F,F,T)]
StuList <- list(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
StuList
stuDF <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50)
)
stuDF
class(stuDF)
typeof(StuDF)
class(StuDF$names)
StuDF$names <- as.character(StuDF$names)
class(StuDF$names)
StuDF2 <- data.frame(
studentID=c(172,214,322,425,517),
names=c("小明","大雄","胖虎","小新","大白"),
grade=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
class(StuList)
as.data.frame(StuList) -> StuDF3
class(StuDF3)
StuDF3
as.data.frame(StuList,stringsAsFactors = F) -> StuDF4
class(StuDF4)
StuDF4
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
summary(cars)
plot(pressure)
chosenLETTERS[8]
matObj1[8]
matObj1
matObj1[3,2]
matObj1[c(F,F,TRUE,F,F),c(F,TRUE,F)]
tolower(matObj1)
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
chosenLETTERS[8]
matObj1[8]
LETTERS # R內設元素值為英文字母群的character vector
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]   #取英文字母前15個
matObj1 <- matrix(chosenLETTERS,5,3) #做成矩陣
matObj1
tolower(matObj1)
toupper(matObj1)
chosenLETTERS[[8]]
matObj1[[8]]
matObj1
matObj1[3,2]
matObj1[c(F,F,TRUE,F,F),c(F,TRUE,F)]
matObj1[c(1,4),c(2,3)]
matObj1
matObj1[3,2]
matObj1[c(F,F,TRUE,F,F),c(F,TRUE,F)]
matObj1[c(1,4),c(2,3)]  #前面rows 後面columns
matObj1[c(T,F,F,T,F),c(F,T,T)]
matObj1
matObj1[3,2]
matObj1[c(F,F,TRUE,F,F),c(F,TRUE,F)]
matObj1[c(1,4),c(2,3)]  #前面rows 後面columns
matObj1[c(T,F,F,T,F),c(F,T,T)] #跟上行同樣意思
matObj1[c(1,4),c(F,T,T)]
matObj1
matObj1[3,2]
matObj1[c(F,F,TRUE,F,F),c(F,TRUE,F)]
matObj1[c(1,4),c(2,3)]  #前面rows 後面columns
matObj1[c(T,F,F,T,F),c(F,T,T)] #跟上行同樣意思
matObj1[c(1,4),c(F,T,T)] #可以混著搭 同樣意思
library(readr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
dim(classSurvey)
dim(classSurvey)
nrow(classSurvey)
dim(classSurvey)
nrow(classSurvey)
ncol(classSurvey)
View(classSurvey)
View(classSurvey)
classSurvey[,3]
classSurvey[,3]
classSurvey
classSurvey[1,3]
class(classSurvey)
classSurvey[,3]
classSurvey[,4]
classSurvey[c(1:60),c(4,5)]
classSurvey[,]
classSurvey[c(1:60),c(4,5)]
classSurvey[c(1:60),c(4,5)]
classSurvey[c(1:60),c(4,5)]
classSurvey[c(1:60),c(4,5)]
classSurvey[,]
classSurvey[c(1:60),c(4,5)]
classSurvey[c(1:60),c(F,F,F,T,T,F)]
classSurvey[,c(4,5)]
classSurvey[,4:5]
classSurvey[,c(F,F,F,T,T,F)]
#classSurvey[]
classSurvey[c("性別","本學期學分數")]
classSurvey[logical_index,]
